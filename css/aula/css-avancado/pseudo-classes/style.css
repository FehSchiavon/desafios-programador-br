/* Quando selecionado ele fica muda a cor, resumindo quando focado */
input:focus {
    color: red;
}

/* Ele seleciona o Primeiro elementos da TAG que você chamar, porém se tiver outro na frente
   Ele não vai funcionar */
li:first-child {
    color: blue;
}

/* Este Pseudo Class pega o primeiro Item a TAG que você escolheu, ele não precisa esta ligado
   ao Pai da TAG selecionada */
li:first-of-type {
    color: cadetblue;
}

/* Para pegar o Segundo Filho da Hirarquia que você quiser */
li:nth-child(2) {
    color: crimson;
}

/* NTH vai pegar Segundo item da TAG que você quiser, não precisa esta ligado ao Pai da classe */
li:nth-of-type(4) {
    color: darkmagenta;
}

/* Ele vai pegar a Hiranquia de Tras para Frente do Ultimo para o Primeiro */
li:nth-last-child(3) {
    color: darkorange;
}

/* Vai funcionar igual o NTH-OF-TYPE só que dá forma invertida */
li:last-of-type {
    color: deeppink;
}

/* === Extra === */
/* Por usar o 2n que seria todos o números que sao divisiveis por 2 */
li:nth-of-type(2n) {
    font-weight: bolder;
}
/* Todos os numeros que sao IMPAR - ODD */
li:nth-of-type(odd) {
    background-color: gainsboro;
}
/* Todos os numeros que sao PAR - EVEN */
li:nth-of-type(even) {
    background-color: indigo;
}
/* Dá para fazer até contas para definir com Xn - 3 */
li:nth-of-type(7n - 2) {
    color: white;
}



